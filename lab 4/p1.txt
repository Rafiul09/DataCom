bit_stream = [0 1 0 0 0 0 1 1 0 0 0 1];
no_bits = length(bit_stream);
bit_rate = 4000; % 4 kbps
pulse_per_bit = 1; % for unipolar nrz
pulse_duration = (1/((pulse_per_bit)*(bit_rate)))*(bit_rate);
no_pulses = no_bits*pulse_per_bit;
samples_per_pulse = 500;
fs = (samples_per_pulse)/(pulse_duration); %sampling frequency
% including pulse duration in sampling frequency
% ensures having enough samples in each pulse
t = 0:1/fs:(no_pulses)*(pulse_duration); % sampling interval
% total duration = (no_pulse)*(pulse_duration)
no_samples = length(t); % total number of samples
dig_sig = zeros(1,no_samples);
max_voltage = 5;
min_voltage = -5;
for i = 1:no_bits
if bit_stream(i) == 1
 dig_sig(((i-1)*(samples_per_pulse)+1):i*(samples_per_pulse))=min_voltage*ones(1,samples_per_pulse);
else
 dig_sig(((i-1)*(samples_per_pulse)+1):i*(samples_per_pulse))=max_voltage*ones(1,samples_per_pulse);
end
end
plot(t,dig_sig,'linewidth',1.5)
grid on
xlabel('time in seconds')
ylabel('Voltage')
ylim([(min_voltage - (max_voltage)*0.2)
(max_voltage+max_voltage*0.2)])
title(['SL: 25 ID 21-44631-1 Polar NRZ for ',num2str(bit_stream),''])
-------------------------
bit_stream = [0 1 0 0 0 0 1 1 0 0 0 1];
no_bits = length(bit_stream);
bit_rate = 2000; % 2 kbps
pulse_per_bit = 2; % for differential
manchester
pulse_duration =(1/((pulse_per_bit)*(bit_rate))) * bit_rate ;
no_pulses = no_bits*pulse_per_bit;
samples_per_pulse = 500;
fs = (samples_per_pulse)/(pulse_duration);
%sampling frequency
% including pulse duration in sampling frequency
% ensures having enough samples in each pulse
t = 0:1/fs:(no_pulses)*(pulse_duration); % sampling interval
% total duration = (no_pulse)*(pulse_duration)
no_samples = length(t); % total number of samples
dig_sig = zeros(1,no_samples);
max_voltage = +2;
min_voltage = -2;
%inv_bit = 1; % inverting bit
%last_state = max_voltage;
%inv_last_state = min_voltage; % inverse of last state
for i = 1:no_bits
j = (i-1)*2;
if bit_stream(i) == 1
dig_sig((j*(samples_per_pulse)+1):(j+1)*(samples_per_pulse)) = min_voltage*ones(1,samples_per_pulse);
dig_sig(((j+1)*(samples_per_pulse)+1):(j+2)*(samples_per_pulse)) = max_voltage*ones(1,samples_per_pulse);
else
dig_sig((j*(samples_per_pulse)+1):(j+1)*(samples_per_pulse)) = max_voltage*ones(1,samples_per_pulse);
dig_sig(((j+1)*(samples_per_pulse)+ 1):(j+2)*(samples_per_pulse)) = min_voltage*ones(1,samples_per_pulse);
end
end
figure
plot(t,dig_sig,'linewidth',1.5)
grid on
xlabel('time in seconds')
ylabel('Voltage')
ylim([(min_voltage - (max_voltage)*0.2)
(max_voltage+max_voltage*0.2)])
title(['SL: 25 ID 21-44631-1 Manchester for',num2str(bit_stream),''])
-------------------------------
bit_stream = [0 1 0 0 0 0 1 1 0 0 0 1];
no_bits = length(bit_stream);
bit_rate = 5000;
pulse_per_bit = 1;
pulse_duration = 1;
no_pulses = no_bits*pulse_per_bit;
samples_per_pulse = 500;
fs = (samples_per_pulse)/(pulse_duration);
t = 0:1/fs:(no_pulses)*(pulse_duration);
no_samples = length(t);
dig_sig = zeros(1,no_samples);
max_voltage = +2;
avg_voltage=0;
min_voltage = -2;
inv_bit=1;
for i = 1:no_bits
if bit_stream(i) == 1
if inv_bit == 1
dig_sig(((i-1)*(samples_per_pulse)+1):i*(samples_per_pulse))=max_voltage*ones(1,samples_per_pulse);
inv_bit=0;
else
dig_sig(((i-1)*(samples_per_pulse)+1):i*(samples_per_pulse))=min_voltage*ones(1,samples_per_pulse);
inv_bit=1;
end
else
dig_sig(((i-1)*(samples_per_pulse)+1):i*(samples_per_pulse))=avg_voltage*ones(1,samples_per_pulse);
end
end
figure
plot(t,dig_sig,'linewidth',1.5)
grid on
xlabel('time in seconds')
ylabel('Voltage')
ylim([(min_voltage - (max_voltage)*0.2) (max_voltage+max_voltage*0.2)])
title(['SL: 25 ID 21-44631-1 AMI for ',num2str(bit_stream),''])
------------------------------
bit_stream = [0 1 0 0 0 0 1 1 0 0 0 1];
no_bits = length(bit_stream);
bit_rate = 10000;
pulse_per_bit =1;
pulse_duration = 1;
no_pulses = no_bits*pulse_per_bit;
samples_per_pulse = 500;
fs = (samples_per_pulse)/(pulse_duration);
t = 0:1/fs:(no_pulses)*(pulse_duration);
no_samples = length(t);
dig_sig = zeros(1,no_samples);
max_voltage =+2;
min_voltage =-2;
neutral_volt=0;
last_state=neutral_volt;
prev_last_state=min_voltage;
for i = 1:no_bits
if bit_stream(i) == 1
if last_state==max_voltage
dig_sig(((i-1)*(samples_per_pulse)+1):(i*samples_per_pulse)) = neutral_volt*ones(1,samples_per_pulse);
last_state=neutral_volt;
prev_last_state=max_voltage;
elseif last_state==min_voltage
dig_sig(((i-1)*(samples_per_pulse)+1):(i*samples_per_pulse))=neutral_volt*ones(1,samples_per_pulse);
last_state=neutral_volt;
prev_last_state=min_voltage;
else
if prev_last_state==max_voltage
dig_sig(((i-1)*(samples_per_pulse)+1):(i*samples_per_pulse))=min_voltage*ones(1,samples_per_pulse);
last_state=min_voltage;
prev_last_state=neutral_volt;
else
dig_sig(((i-1)*(samples_per_pulse)+1):(i*samples_per_pulse))=max_voltage*ones(1,samples_per_pulse);
last_state=max_voltage;
prev_last_state=neutral_volt;
end
end
else
dig_sig(((i-1)*(samples_per_pulse)+1):(i*samples_per_pulse))=last_state*ones(1,samples_per_pulse);
end
end
plot(t,dig_sig,'linewidth',1.5)
grid on
xlabel('time in seconds')
ylabel('Voltage')
ylim([(min_voltage - (max_voltage)*0.2)
(max_voltage+max_voltage*0.2)])
title(['SL: 25 ID 21-44631-1 MLT-3 bits: ',num2str(bit_stream),''])
